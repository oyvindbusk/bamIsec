name: Build
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: alaviss/setup-nim@master
        with:
          path: '../nim'
          version: 'version-1-4'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
      - name : install htslib
        run: |
          tar xzf 1.11.tar.gz
          sudo apt-get update
          sudo apt-get install git llvm curl wget libcurl4-openssl-dev autoconf
          wget https://github.com/samtools/htslib/archive/1.11.tar.gz
          cd htslib-1.11/
          autoheader && autoconf && ./configure --disable-libcurl
          sudo make -j4 install
      - name: Run tests
        run: |
          export PATH=$HOME/.nimble/bin:$PATH
          export LD_LIBRARY_PATH=/usr/local/lib/
          nimble build -y
          nimble test

name: tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, dev, simplify ]
  pull_request:
    branches: [ master ]




# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nimversion:
        - stable
        - devel

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'

    - uses: iffy/install-nim@v1.1
      with:
        nimversion: ${{ matrix.nimversion }}

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: actions-rs/cargo@v1

    - name : install htslib
      run: |
        sudo apt-get update
        sudo apt-get install git llvm curl wget libcurl4-openssl-dev autoconf
        wget https://github.com/samtools/htslib/archive/1.11.tar.gz
        tar xzf 1.11.tar.gz
        cd htslib-1.11/
        autoheader && autoconf && ./configure --disable-libcurl
        sudo make -j4 install

    #export HTSLIB=system
    #sudo ln -s /usr/bin/gcc /usr/bin/musl-gcc
    # rustup target add x86_64-unknown-linux-musl
    - name : install d4
      run: |
        git clone https://github.com/38/d4-format
        cd d4-format
        cargo build --release --all #--target=x86_64-unknown-linux-musl
        ls target/release
        sudo cp target/release/libd4binding.* /usr/local/lib
        sudo cp ./d4binding/include/d4.h /usr/local/include/

    # Runs a single command using the runners shell
    - name: test nim stuff
      run: |
        export LD_LIBRARY_PATH=/usr/local/lib/
        nimble build -y
        nimble test

    # Runs a set of commands using the runners shell
    - name: test javascript stuff
      run: |
        npm install mocha
        npm test


